pipeline{
  agent any
  
  environment {
        FILE_LOCATION = 'example-voting-app/' 
        BUILD_TAG = "build-${BUILD_NUMBER}"
    }


  stages{

    
    stage('buildDockerImage'){
      steps{
        sh ''' 
          cd ${FILE_LOCATION}
          echo "Using tag: ${BUILD_TAG}"
          export BUILD_TAG=${BUILD_TAG}
          docker compose build
        '''
      }
    }


    stage('pushingImage') {
    steps {
      withCredentials([usernamePassword(credentialsId: 'docker', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
        sh '''
          echo $PASSWORD | docker login -u $USERNAME --password-stdin

          for i in {1..3}; do
            docker push najamarcana/voteapp:${BUILD_TAG} && break || sleep 10
          done

          for i in {1..3}; do
            docker push najamarcana/worker:${BUILD_TAG} && break || sleep 10
          done

          for i in {1..3}; do
            docker push najamarcana/resultapp:${BUILD_TAG} && break || sleep 10
          done
        '''
      }
    }
    }
    
    
    stage('Commit .env file') {
      steps {
        withCredentials([sshUserPrivateKey(credentialsId: 'jenkins-deploy-key', keyFileVariable: 'SSH_KEY', usernameVariable: 'SSH_USER')]) {
          sh '''
            git config --global user.email "muhammad.najam@arcanainfo.com"
            git config --global user.name "Najam-arcana"

            export GIT_SSH_COMMAND="ssh -i $SSH_KEY -o StrictHostKeyChecking=no"

            if [ -d "voting-app" ]; then
              cd voting-app
              git pull origin main
            else
              git clone git@github.com:Najam-arcana/voting-app.git
              cd voting-app
            fi
            cd example-voting-app

            echo "BUILD_TAG=${BUILD_TAG}" > .env

            git add .env
            git commit -m "Add .env from Jenkins"
            git push origin main
          '''
        }
      }
    }




    
    stage('deployImage'){
    steps{
      withCredentials([sshUserPrivateKey(credentialsId: 'ec2', keyFileVariable: 'SSH_KEY', usernameVariable: 'Username')]){
      
        sh ''' 
          ssh -i \$SSH_KEY -o StrictHostKeyChecking=no \$Username@ec2-54-89-241-89.compute-1.amazonaws.com << 'ENDSSH'

            echo "Connected to EC2"
            docker ps
            mkdir -p ~/voting-app
            cd ~/voting-app

            # Pull latest docker-compose.yml (if not already there)
            curl -O https://raw.githubusercontent.com/Najam-arcana/voting-app/main/example-voting-app/docker-compose.yml
            sleep 5
            curl -s -H 'Cache-Control: no-cache' -o .env https://raw.githubusercontent.com/Najam-arcana/voting-app/main/example-voting-app/.env


            docker compose pull
            docker compose up -d
            docker ps
            
           ENDSSH
        '''
      }
    }
  }

    
    
  }
}
