pipeline{
  agent any
  
  environment {
        FILE_LOCATION = 'example-voting-app/' 
    }


  stages{

    
    stage('buildDockerImage'){
      steps{
        sh ''' 
          cd ${FILE_LOCATION}
          docker compose up -d
        '''
      }
    }


    stage('pushingImage') {
    steps {
      withCredentials([usernamePassword(credentialsId: 'docker', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
        sh '''
          echo $PASSWORD | docker login -u $USERNAME --password-stdin

          for i in {1..3}; do
            docker push najamarcana/voteapp:latest && break || sleep 10
          done

          for i in {1..3}; do
            docker push najamarcana/worker:latest && break || sleep 10
          done

          for i in {1..3}; do
            docker push najamarcana/resultapp:latest && break || sleep 10
          done
        '''
      }
    }
  }



    
    stage('deployImage'){
    steps{
      withCredentials([sshUserPrivateKey(credentialsId: 'ec2', keyFileVariable: 'SSH_KEY', usernameVariable: 'Username')]){
      
        sh ''' 
          ssh -i \$SSH_KEY -o StrictHostKeyChecking=no \$Username@ec2-54-89-241-89.compute-1.amazonaws.com << EOF
            echo "Connected to EC2"
            docker ps
            docker stop vote || true
            docker rm vote || true
            docker run -d -p 8000:80 --name vote najamarcana/voteapp
            
        '''
      }
    }
  }

    
    
  }
}
